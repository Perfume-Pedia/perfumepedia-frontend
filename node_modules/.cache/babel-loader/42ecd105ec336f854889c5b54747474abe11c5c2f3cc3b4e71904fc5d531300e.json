{"ast":null,"code":"var _jsxFileName = \"/Users/jin/Desktop/perfumepedia-frontend/src/pages/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../pages/Perfumes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [items, setItems] = useState([]); // 여러 아이템 상태를 관리\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0); // 현재 페이지 상태\n  const size = 10; // 페이지당 아이템 수\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetch(`http://49.50.162.194:3000/api/search?lastid=${page * size}&size=${size}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setItems(data.data.items); // 현재 페이지의 아이템들을 설정\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [page, size]); // 페이지나 사이즈가 변경될 때 useEffect가 실행되도록 함\n\n  const handlePageChange = newPage => {\n    setPage(newPage);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (!items.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No items found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 31\n  }, this); // 아이템이 없을 경우\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"white\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image_url,\n          alt: `${item.perfume_name} by ${item.brand_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, `${item.perfume_name}-${item.brand_name}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grey\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAC80\\uC0C9 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"04/FxRIEHgt22PrMV+/FuIQvJtc=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Search","_s","items","setItems","isLoading","setIsLoading","error","setError","page","setPage","size","fetchData","response","fetch","ok","Error","data","json","err","message","handlePageChange","newPage","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","item","src","image_url","alt","perfume_name","brand_name","Array","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/jin/Desktop/perfumepedia-frontend/src/pages/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../pages/Perfumes.css';\n\nexport default function Search() {\n    const [items, setItems] = useState([]); // 여러 아이템 상태를 관리\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(0); // 현재 페이지 상태\n    const size = 10; // 페이지당 아이템 수\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setIsLoading(true);\n                const response = await fetch(`http://49.50.162.194:3000/api/search?lastid=${page * size}&size=${size}`);\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n\n                const data = await response.json();\n                setItems(data.data.items); // 현재 페이지의 아이템들을 설정\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [page, size]); // 페이지나 사이즈가 변경될 때 useEffect가 실행되도록 함\n\n    const handlePageChange = (newPage) => {\n        setPage(newPage);\n    };\n\n    if (isLoading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n    if (!items.length) return <div>No items found</div>; // 아이템이 없을 경우\n\n    return (\n        <div>\n            <section className=\"white\">\n                {items.map(item => (\n                    <div key={`${item.perfume_name}-${item.brand_name}`}>\n                        <img src={item.image_url} alt={`${item.perfume_name} by ${item.brand_name}`} />\n                    </div>\n                ))}\n            </section>\n            <section className=\"grey\">\n                <p>검색 페이지</p>\n            </section>\n            <div className=\"pagination\">\n                {/* 간단한 페이지네이션 버튼 */}\n                {[...Array(10)].map((_, index) => (\n                    <button key={index} onClick={() => handlePageChange(index)}>\n                        {index + 1}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}